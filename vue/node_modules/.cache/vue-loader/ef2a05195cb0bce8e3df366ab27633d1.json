{"remainingRequest":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\src\\views\\code.vue?vue&type=template&id=67f13e87","dependencies":[{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\src\\views\\code.vue","mtime":1744218745947},{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1735803514000},{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1735803514000},{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1735803516000},{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1735803516000},{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1735803514000},{"path":"C:\\Users\\86186\\Desktop\\SmartFarm\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1735803516000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}